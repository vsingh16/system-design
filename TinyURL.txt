Requirement: We need to design a Tiny URL service which will support two functionalities.
1. Create a tiny URL for long URL.
2. Get Long URL for tiny URL.
3. Length of tiny URL is 7.

Referrences: 
https://www.youtube.com/watch?v=JQDHz72OA3c
https://www.youtube.com/watch?v=fMZMm_0ZhK4

API Design: 
String createTinyURL(String longURL)
String getLongURL(String tinyURL)

DB Schema:
id,tiny URL(Primar Key), Long URL, Timestamp

Tiny URL Generation:
Tiny URL will consist of (a-z,A-Z,0-9). 62 characters, 7^62 combinations.
i.e our service can service 7^62 unique tiny URLs.
Approach 1: We can generate random no and then apply Base 62 i.e no%62 and n = n/62 (in this way we will get a no b/w 0-61 which we can map to characters(a-z,A-Z,0-9))
 
 User----> TINY URL Generation Service---> DB
 
 Case1: If two users hits tiny url creation at same time, 
 REQ1(Long URL), -> random 1 -> tiny URL 1 
 REQ2(Same Long URL), -> random 2 -> tiny URL 2
 In this case , two entries will be made in db . This is fine but we see that multiple tiny urls may get allocated to long URL, duplicacy.
 
 Case2: If two users hits tiny url creation at same time, 
 REQ1(Long URL 1), -> Same random  -> tiny URL 
 REQ2(Long URL 2), -> Same random  -> same tiny URL 
 In this case , since we have Primary key in table on tiny url, one request will be succeed and 2 will fail.
 To address this, we can apply retrey that 2nd req will again generate random and repeat the process until it gets unique URL.
