Requirements:
1) User should be able to upload video.
2) User should be able to view video.
3) User can perform search.
4) User should be able to view/add comment on video.
5) Video view/like/dislike counter.

API Design:
Post: uploadVideo(video title, description, tags[], category id, default language, recording details, video content)
Get: searchVideo(search_query, current page count, total page )
Get: streamVideo(video id, codec, resolution) : codec and resoultion will be generated on the basis of client device.User can also select resolution supported by his device.

Low Level Design:
Client-----upload----------> WEb Server-----> APP Server(In case of upload, video content will be placed into queue.)---->queue------->Encoder--------> Save content in S3       
      -----search------->                             |                                                                                       --------> Save Thumbnail in S3
      -----streamVideo------->                        |  
                                                      |
                      (CDN )                          User DB, Metada DB    

Upload Flow: Client will invoke upload API call. Request will be added to a queue. Then dequeue from queue. Encoder is responsible for processing video content to different format to support multiple client devices and their format. Video Content will be save in S3.
Thumbnail is also generated for a video and stored in S3.
There are two DbS.
User DB: This will persist user info and their payment details.
Metadata DB: Metadata DB will store video metadata information.

Stream Flow: Request will go to near by CDN to fullfill video play request. 
CDN(Content Delivery Network): This is set of servers placed across the globe , so that communication cost(latency) b/w client and server can be reduced.

Search Flow: Metadata DB will server this request. Thumbnails are returned in response.

DB Schema:
Video Table:
(id, title, descrption, size, thumbnail, uploaded by user, likes, dislikes, total views)
Comment Table:
(id, video id, user id, comment)
User Table:
(id, Name, Email, Address)
