Requirements:
Implement put(key,value) & get(key) of Hashmap.

class Entry<K,V>{

private K key;
private V value;
private Entry<K,V> next;

public Entry<K,V>(K key, V value){
  this.key = key;
  this.value = value;
  this.next = null;
}

}


class Map<K,V>{

private int size = 16;
private Entry<K,V> buckets[] = new Entry[size];

public void put(K key, V value){
  int index = key.hashcode()%size;
  Entry entry = buckets[index];
  boolena append = true;
  boolena override = false;
  if(entry == null){ //first entry
    buckets[index] = new Entry(key,value);
  }else{
    while(enty.next != null){       
      if(entry.key.equals(key)){ //override
        entry.value = value;
        append = false;
        override = true;
        break;        
      }
      entry = entry.next;
    }
    // append case
    if(append){
    entry.next = new Entry(key,value);
    }    
  }

}

public V get(K key){
  int index = key.hashcode()%size;
  Entry entry = buckets[index];
  while(entry !=null && !entry.key.equals(key)){
     entry = entry.next;
  }
  if(entry !=null){
    return entry.value;
  }else{
    return null;
  }
}

}
